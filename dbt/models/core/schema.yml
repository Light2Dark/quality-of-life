version: 2

models:
  - name: air_quality
    description: Hourly air quality data. Composite PK = city + datetime.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - place
            - datetime
    columns:
      - name: place
        tests:
          - not_null
          - relationships:
              field: place
              to: ref('full_locations')
      - name: datetime
        description: Format of YYYY-MM-DD HH:MM:SS.
        tests:
          - not_null
      - name: city
        description: City of the location
        tests: 
          - not_null
          - relationships:
              field: city
              to: ref('full_locations')
      - name: pollutant
        description: There are different sensors which track different pollutants. Only the highest valued pollutant is recorded.
        tests:
          - accepted_values:
              values: ['PM10', 'PM2.5', 'NO2', 'SO2', 'CO2', 'O3', 'multi-pollutant', 'CO', '']
      - name: pollutant_value
        description: The station records several values from different sensors, only the highest value is recorded as air quality reading.
        tests:
          - not_null
      # - name: unit
      #   description: Unit for the air quality reading of the sensor.
      #   tests:
      #     - accepted_values:
      #         values: ["ppm", "Î¼g/m3", ""]

  - name: uv
    description: "Hourly uv data together with labels and warnings"
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - place
            - datetime
    columns:
      - name: place
        description: Place of the location
        tests:
          - relationships:
              field: place
              to: ref('full_locations')
      - name: city
        description: City of the location
        tests: 
          - not_null
          - relationships:
              field: city
              to: ref('full_locations')

  - name: weather
    description: "Hourly data from weather API"
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - place
            - datetime
    columns:
      - name: datetime
        description: Format of YYYY-MM-DD HH:MM:SS.
        tests:
          - not_null
      - name: place
        description: Place of the location
        tests:
          - relationships:
              field: place
              to: ref('full_locations')
      - name: city
        description: City of the location
        tests: 
          - not_null
          - relationships:
              field: city
              to: ref('full_locations')

  - name: full_locations
    description: Combines the location, city and state data into a singular table
    columns:
      - name: identifying_location
        tests:
          - unique
      - name: place
        tests:
          - not_null
      - name: city
        tests:
          - not_null
      - name: state
        tests:
          - not_null

  - name: full_weather
    description: "Hourly data for all envinronmental factors, combining air quality & weather, grouped by city"
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - city
            - datetime
    columns:
      - name: city
        tests:
          - not_null
          - relationships:
              field: city
              to: ref('full_locations')
      - name: datetime
        description: Format of YYYY-MM-DD HH:MM:SS.
        tests:
          - not_null

  - name: full_weather_places
    description: "Hourly data for all envinronmental factors, combining air quality & weather, grouped by places"
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - place
            - datetime
    columns:
      - name: place
        description: Place of the location
        tests:
          - relationships:
              field: place
              to: ref('full_locations')
      - name: city
        tests:
          - not_null
          - relationships:
              field: city
              to: ref('full_locations')
      - name: state
        tests:
          - not_null
          - relationships:
              field: state
              to: ref('full_locations')
      - name: datetime
        description: Format of YYYY-MM-DD HH:MM:SS.
        tests:
          - not_null